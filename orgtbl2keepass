#!/usr/bin/perl -w

use strict;
use File::KeePass;
use JSON;

my $config;
my $config_file = $ENV{"HOME"} . '/.orgtbl2keepassrc.json';

{
    # load config file
    local $/;
    open( my $fh, '<', $config_file ) or die qq^Unable to open config file $config_file . Create it like this:

{
    "master_password"      : "secret",
    "password_kdb_file"    : "/home/username/path/passwords.kdb",
    "password_org_file"    : "/home/username/path/passwords.org",
    "password_table_start" : "* websites"
}
^;

    my $json_text   = <$fh>;
    $config = decode_json( $json_text );
}

my $k = File::KeePass->new;

open my $f, "<", $config->{password_org_file} or die "unable to open password org file ",
$config->{password_org_file}, ", $!\n";

my @columns ;

#split on (multiple) empty lines
while (<$f>)
{
    # skip to table start
    next if 1 .. m/\Q$config->{password_table_start}\E/;

    # skip empty rows
    next if m/^[\|\-\+ ]+$/;

    # end on next org heading or empty line
    last if m/^\*/ or m/^\s*$/;

    my ($record, @line);

    if (not @columns)
    {
        # first line
        $_ = lc;                # use lowercase column names
        @columns = split / *\| */;
        next;
    }
    else
    {
        # not the first line
        @line =  split / *\| */;
    }

    for (my $column = 0; $column < scalar @columns; $column++)
    {
        $record -> { $columns[$column] } = $line[$column];
    }

    $k->add_entry( $record );

}

close $f;

# save out a version 1 database
$k->save_db
(
    $config->{password_kdb_file},
    $config->{master_password}
)
or die "unable to save password kdb file ", $config->{password_kdb_file}, ", $!\n";


